@use "sass:map";

@mixin milkdown($theme) {
  // decorators

  --font-code: #{map.get($theme, "font-monospace")};

  .strong {
    font-weight: 600;
  }

  .link {
    color: map.get($theme, "fg-secondary");
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    font-weight: 500;
  }

  .em {
    font-style: italic;
  }

  //

  .blockquote {
    padding-left: 1em;
    border-left: 4px solid;
    border-left-color: map.get($theme, "bg-dim");
    color: map.get($theme, "fg-secondary");
    margin: 0;
    * {
      font-size: 1em;
      line-height: 1.5em;
    }
  }

  //code

  .code-inline {
    background-color: map.get($theme, "bg-secondary");
    border-radius: var(--radius);
    font-weight: 500;
    font-family: var(--font-code);
    font-size: .9em;
    padding: 0 0.2em;
  }

  .code-fence {
    border-radius: 5px;
    font-size: 0.85em;
    padding: 0 0.4em 1.4em;
    overflow: hidden;
    background-color: map.get($theme, "bg-secondary");

    * {
      margin: 0;
    }

    div:first-child {
      box-sizing: border-box;
      width: 100%;
      min-width: 15ch;
      max-width: 30ch;
      margin: 1em;
      display: grid;
      grid-template-areas: "select";
      align-items: center;
      cursor: pointer;
      background-color: map.get($theme, "bg-secondary");
      position: relative;

      &:hover::after {
        background: map.get($theme, "bg-secondary");
        color: map.get($theme, "fg-secondary");
      }

      .code-fence_select {
        z-index: 1;
        font-family: var(--font);
        font-weight: 500;
        line-height: 1.5;
        color: map.get($theme, "fg-dim");
        grid-area: select;
        font-size: 0.85em;
        outline: none;
        appearance: none;
        width: 100%;
        height: 100%;
        border: 0;
        margin: 0;
        background-color: transparent;
      }

      option {
        background-color: map.get($theme, "bg-secondary");
        font-weight: normal;
        display: block;
        white-space: nowrap;
        min-height: 1.2em;
        padding: 0 2px 1px;
      }
    }

    pre {
      font-family: map.get($theme, "font-monospace");
      margin: 0 1em;
    }

    code {
      font-family: map.get($theme, "font-monospace");
      line-height: 1.5;
    }
  }

  // gfm

  .strike-through {
    text-decoration-color: palette(secondary);
  }

  .task-list-item {
    list-style-type: none;
    position: relative;
    & > div {
      display: inline-block;
    }
    label {
      position: absolute;
      top: 0;
      left: -2rem;
      display: inline-block;
      width: 1.5rem;
      height: 1.5rem;
      margin: 0.5rem 0;
      input {
        visibility: hidden;
      }
    }
    label:before {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: var(--radius);
    }
    label:hover:before {
      background: palette(background);
    }
    &[data-checked="true"] {
      label:before {
        content: "check_box";
        color: palette(primary);
      }
    }
    &[data-checked="false"] {
      label:before {
        content: "check_box_outline_blank";
        color: palette(solid, 0.87);
      }
      .paragraph {
        margin: 0.5rem 0;
      }
    }
  }
}
