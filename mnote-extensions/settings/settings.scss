@use "~mnote-styles/mnote-vars" as mn;
@use "~mnote-components/vanilla/word-stats.scss";
@use "~mnote-components/react/tree.scss";

.settings-editor {
  width: 100%;
  height: 100%;

  * {
    box-sizing: border-box;
  }

  .settings-view-toggle {
    @include word-stats.word-stats;
    color: map-get(mn.$vars, fg-dim);
  }

  .settings-textarea {
    padding: 2em 3em 3em;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    resize: none;
    outline: none;
    border: none;
    font-family: map-get(mn.$vars, font-monospace);
    font-size: 13px;
    line-height: 1.5;
    color: inherit;
    background: inherit;

    @include mn.scrollbar(map-get(mn.$vars, bg-secondary));
  }

  .settings-main {
    width: 90%;
    height: 100%;
    max-width: 720px;
    margin: auto;
    padding: 1.2em 0;

    display: flex;
    flex-direction: row;

    .settings-contents {
      flex: 1;
      padding: 0 1.2em;
      height: 100%;
      overflow-y: auto;
      @include mn.scrollbar(map-get(mn.$vars, bg-secondary));
    }

    .settings-toc {
      width: fit-content;
      padding: 0 1.2em;
      font-size: 0.9em;
      border-left: solid 1px var(--mnote-border-main);

      height: 100%;
      overflow-y: auto;
      @include mn.scrollbar(map-get(mn.$vars, bg-secondary));

      $theme: (
        item-bg: map-get(mn.$vars, bg-main),
        item-fg: map-get(mn.$vars, fg-main),
        item-icon: map-get(mn.$vars, fg-dim),
        item-hover-bg: map-get(mn.$vars, bg-secondary),
        item-hover-fg: map-get(mn.$vars, fg-main),
        item-hover-icon: map-get(mn.$vars, fg-dim),
        item-focused-bg: map-get(mn.$vars, bg-secondary),
        item-focused-fg: map-get(mn.$vars, fg-main),
        item-focused-icon: map-get(mn.$vars, fg-dim),
      );

      @include tree.tree($theme);

      .tree-item {
        min-width: 10em;
        max-width: 12em;
      }
    }
  }

  .settings-toc-category {
    margin: 1em 0;
  }

  .settings-input-row {
    margin: 2em 0;
    display: flex;
    flex-direction: row;

    .left {
      padding-right: 1.2em;
      flex: 1;

      .title {
        margin: 0 0 0.5em 0;
        font-weight: bold;
      }

      .description {
        color: map-get(mn.$vars, fg-secondary);
        font-size: 0.85em;
      }
    }

    .right {
      flex: 0.3;
    }
  }

  .inputs-boolean {
    width: 2.8em;
    height: 1.4em;
    cursor: pointer;

    svg {
      pointer-events: none;
    }

    &.off {
      .bg {
        fill: map-get(mn.$vars, btn-main-bg);
      }
      .handle {
        fill: map-get(mn.$vars, btn-main-fg);
      }

      &:hover {
        .bg {
          fill: map-get(mn.$vars, btn-main-bg-hover);
        }
        .handle {
          fill: map-get(mn.$vars, btn-main-fg-hover);
        }
      }
    }

    &.on {
      .bg {
        fill: map-get(mn.$vars, btn-emphasis-bg);
      }
      .handle {
        fill: map-get(mn.$vars, btn-emphasis-fg);
      }
      &:hover {
        .bg {
          fill: map-get(mn.$vars, btn-emphasis-bg-hover);
        }
        .handle {
          fill: map-get(mn.$vars, btn-emphasis-fg-hover);
        }
      }
    }
  }
}
